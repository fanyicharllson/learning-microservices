# Production Kafka Configuration

# === BASIC CONNECTION ===
spring.kafka.bootstrap-servers=${KAFKA_BROKERS:localhost:9092}

# === PRODUCER CONFIGURATION ===
# Serialization
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# Reliability & Performance
spring.kafka.producer.acks=all                    # Wait for all replicas to acknowledge
spring.kafka.producer.retries=2147483647          # Retry indefinitely
spring.kafka.producer.max-in-flight-requests-per-connection=5
spring.kafka.producer.enable-idempotence=true     # Prevent duplicate messages

# Batching for performance
spring.kafka.producer.batch-size=16384
spring.kafka.producer.linger-ms=5                 # Wait 5ms to batch messages
spring.kafka.producer.buffer-memory=33554432      # 32MB buffer

# Compression for network efficiency
spring.kafka.producer.compression-type=snappy

# === CONSUMER CONFIGURATION ===
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.group-id=${spring.application.name}

# Reliability
spring.kafka.consumer.enable-auto-commit=false    # Manual commit for better control
spring.kafka.consumer.auto-offset-reset=earliest  # Process all messages from beginning

# Performance tuning
spring.kafka.consumer.fetch-min-size=1024         # Minimum batch size
spring.kafka.consumer.fetch-max-wait=500          # Max wait time for batch
spring.kafka.consumer.max-poll-records=500        # Max records per poll

# JSON serialization settings
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.producer.properties.spring.json.add.type.headers=false

# === ADMIN CONFIGURATION ===
spring.kafka.admin.properties.bootstrap.servers=${KAFKA_BROKERS:localhost:9092}

# === TOPIC CONFIGURATION ===
# Auto-create topics with proper settings
spring.kafka.producer.properties.default.replication.factor=3
spring.kafka.producer.properties.min.insync.replicas=2

# === SECURITY (for production) ===
# SSL Configuration
#spring.kafka.security.protocol=SSL
spring.kafka.ssl.trust-store-location=${KAFKA_SSL_TRUSTSTORE_LOCATION}
spring.kafka.ssl.trust-store-password=${KAFKA_SSL_TRUSTSTORE_PASSWORD}
spring.kafka.ssl.key-store-location=${KAFKA_SSL_KEYSTORE_LOCATION}
spring.kafka.ssl.key-store-password=${KAFKA_SSL_KEYSTORE_PASSWORD}

# SASL Authentication (if using)
spring.kafka.security.protocol=SASL_SSL
spring.kafka.properties.sasl.mechanism=PLAIN
spring.kafka.properties.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="${KAFKA_USERNAME}" password="${KAFKA_PASSWORD}";

# === MONITORING ===
# Actuator endpoints for monitoring
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=always

# Metrics
spring.kafka.producer.properties.interceptor.classes=io.micrometer.core.instrument.kafka.KafkaProducerMetrics
spring.kafka.consumer.properties.interceptor.classes=io.micrometer.core.instrument.kafka.KafkaConsumerMetrics